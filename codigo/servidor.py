#!/usr/bin/env python3
"""
Sistema de Climatiza√ß√£o - Servidor Principal
Vers√£o Cliente: Est√°vel e Profissional
"""

import signal
import sys
from servidor_modules import server_utils, http_handler, browser_monitor

def main():
    """Fun√ß√£o principal - Robusta e profissional"""
    print("üöÄ INICIANDO SISTEMA DE CLIMATIZA√á√ÉO")
    print("=" * 55)
    
    # Configura√ß√£o profissional
    server_utils.setup_signal_handlers()
    
    # Configura porta
    port = server_utils.setup_port(8000)
    if not port:
        print("‚ùå N√£o foi poss√≠vel inicializar o sistema")
        print("üí° Verifique se as portas 8000-8010 est√£o dispon√≠veis")
        input("Pressione Enter para sair...")
        return
    
    # Inicializa√ß√£o do servidor
    try:
        with server_utils.create_server(port, http_handler.UniversalHTTPRequestHandler) as httpd:
            # Informa√ß√µes do sistema
            server_utils.print_server_info(port)
            
            # Inicializa√ß√£o das threads
            server_utils.start_server_threads(port, httpd, browser_monitor.monitorar_navegador)
            
            # Loop principal
            server_utils.run_server_loop(httpd)
            
    except KeyboardInterrupt:
        print("\n‚èπÔ∏è  Encerramento solicitado pelo usu√°rio")
    except Exception as e:
        print(f"‚ùå ERRO: {e}")
        print("üîß O sistema ser√° reiniciado automaticamente")
    finally:
        print("‚úÖ Sistema finalizado com sucesso!")
        print("üëã At√© logo!")

if __name__ == "__main__":
    main()